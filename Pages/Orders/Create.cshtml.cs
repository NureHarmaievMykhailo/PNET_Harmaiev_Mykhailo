using AutoWorkshopWeb.Data;
using AutoWorkshopWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.AspNetCore.Mvc.Rendering;
using Microsoft.Extensions.Logging;

namespace AutoWorkshopWeb.Pages.Orders;

public class CreateModel : PageModel
{
    private readonly WorkshopContext _context;
    private readonly ILogger<CreateModel> _logger;

    public CreateModel(WorkshopContext context, ILogger<CreateModel> logger)
    {
        _context = context;
        _logger = logger;
    }

    [BindProperty]
    public Order Order { get; set; } = default!;

    public SelectList Cars { get; set; } = default!;
    public SelectList Services { get; set; } = default!;
    public SelectList Statuses { get; set; } = default!;

    public void OnGet()
    {
        Cars = new SelectList(_context.Cars.Include(c => c.Client), "CarId", "LicensePlate");
        Services = new SelectList(_context.Services, "ServiceId", "Name");
        Statuses = new SelectList(new[] { "–ü—Ä–∏–π–Ω—è—Ç–æ", "–í–∏–∫–æ–Ω—É—î—Ç—å—Å—è", "–ó–∞–≤–µ—Ä—à–µ–Ω–æ" });
    }

    public async Task<IActionResult> OnPostAsync()
    {
        if (!ModelState.IsValid)
        {
            OnGet(); // –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä—É—î–º–æ —Å–ø–∏—Å–∫–∏
            return Page();
        }

        Order.OrderDate = DateTime.Now;
        _context.Orders.Add(Order);

        // üëâ –ó–∞–ø–∏—Å —É —Ç–∞–±–ª–∏—Ü—é ServiceLogs
        _context.ServiceLogs.Add(new ServiceLog
        {
            ServiceId = Order.ServiceId,
            OperationType = "Create",
            Message = $"–°—Ç–≤–æ—Ä–µ–Ω–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –∞–≤—Ç–æ ID={Order.CarId}, –ø–æ—Å–ª—É–≥–∞ ID={Order.ServiceId}, —Å—Ç–∞—Ç—É—Å: {Order.Status}",
            LogDate = DateTime.Now
        });

        await _context.SaveChangesAsync();

        // üëâ –õ–æ–≥ —É –∫–æ–Ω—Å–æ–ª—å
        _logger.LogInformation("–°—Ç–≤–æ—Ä–µ–Ω–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ID={OrderId}, –ê–≤—Ç–æ ID={CarId}, –ü–æ—Å–ª—É–≥–∞ ID={ServiceId}, –°—Ç–∞—Ç—É—Å: {Status}",
            Order.OrderId, Order.CarId, Order.ServiceId, Order.Status);

        return RedirectToPage("Index");
    }
}
